"""Adding tips

Revision ID: d2b094cfa308
Revises: 861b52a2004e
Create Date: 2024-06-11 13:16:57.319769

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd2b094cfa308'
down_revision = '861b52a2004e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('_tiprole',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('_process_tiprole',
    sa.Column('process_id', sa.INTEGER(), nullable=True),
    sa.Column('tiprole_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['process_id'], ['_process.id'], ),
    sa.ForeignKeyConstraint(['tiprole_id'], ['_tiprole.id'], )
    )
    op.create_table('_submissiontypetiproleassociation',
    sa.Column('tiprole_id', sa.INTEGER(), nullable=False),
    sa.Column('submissiontype_id', sa.INTEGER(), nullable=False),
    sa.Column('uses', sa.JSON(), nullable=True),
    sa.Column('static', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['submissiontype_id'], ['_submissiontype.id'], ),
    sa.ForeignKeyConstraint(['tiprole_id'], ['_tiprole.id'], ),
    sa.PrimaryKeyConstraint('tiprole_id', 'submissiontype_id')
    )
    op.create_table('_tips',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('role_id', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('lot', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['_tiprole.id'], name='fk_tip_role_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('_equipment_tips',
    sa.Column('equipment_id', sa.INTEGER(), nullable=True),
    sa.Column('tips_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['equipment_id'], ['_equipment.id'], ),
    sa.ForeignKeyConstraint(['tips_id'], ['_tips.id'], )
    )
    op.create_table('_submissiontipsassociation',
    sa.Column('tip_id', sa.INTEGER(), nullable=False),
    sa.Column('submission_id', sa.INTEGER(), nullable=False),
    sa.Column('role_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['role_name'], ['_tiprole.name'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['_submissiontype.id'], ),
    sa.ForeignKeyConstraint(['tip_id'], ['_tips.id'], ),
    sa.PrimaryKeyConstraint('tip_id', 'submission_id')
    )
    op.create_table('_tiproles_tips',
    sa.Column('tiprole_id', sa.INTEGER(), nullable=True),
    sa.Column('tips_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['tiprole_id'], ['_tiprole.id'], ),
    sa.ForeignKeyConstraint(['tips_id'], ['_tips.id'], )
    )
    # op.create_table('_submissions_tips',
    # sa.Column('submission_id', sa.INTEGER(), nullable=True),
    # sa.Column('tips_id', sa.INTEGER(), nullable=True),
    # sa.ForeignKeyConstraint(['submission_id'], ['_basicsubmission.id'], ),
    # sa.ForeignKeyConstraint(['tips_id'], ['_tips.id'], )
    # )
    # with op.batch_alter_table('_submissionsampleassociation', schema=None) as batch_op:
    #     batch_op.create_unique_constraint("unique_ssa_id", ['id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table('_submissionsampleassociation', schema=None) as batch_op:
    #     batch_op.drop_constraint(None, type_='unique')

    op.drop_table('_submissions_tips')
    op.drop_table('_tiproles_tips')
    op.drop_table('_submissiontipassociation')
    op.drop_table('_equipment_tips')
    op.drop_table('_tips')
    op.drop_table('_submissiontypetiproleassociation')
    op.drop_table('_process_tiprole')
    op.drop_table('_tiprole')
    # ### end Alembic commands ###
